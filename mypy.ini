[mypy]
# Path for the directory that your code is in defaults to the root
# mypy_path = ./code_directory

# Start off with these
warn_unused_configs = True
# Warns about casting an expression to its inferred type.
warn_redundant_casts = True
warn_unused_ignores = True

# Getting these passing should be easy
# Prohibit equality checks, identity checks, and container checks between non-overlapping types.
strict_equality = True
# Make arguments prepended via Concatenate be truly positional-only.
# remove as this is deprecated 
#strict_concatenate = True

# Strongly recommend enabling this one as soon as you can
# Type-checks the interior of functions without type annotations.
check_untyped_defs = True

# These shouldn't be too much additional work, but may be tricky to
# get passing if you use a lot of untyped libraries
# Disallows subclassing a value of type Any.
disallow_subclassing_any = True
# Reports an error whenever a function with type annotations is decorated with a decorator without annotations.
disallow_untyped_decorators = True
# Disallows usage of generic types that do not specify explicit type parameters.
disallow_any_generics = True

# These next few are various gradations of forcing use of type annotations
# Disallows calling functions without type annotations from functions with type annotations
disallow_untyped_calls = True
# Disallows defining functions with incomplete type annotations
disallow_incomplete_defs = True
# Disallows defining functions without type annotations or with incomplete type annotations
disallow_untyped_defs = True

# This one isn't too hard to get passing, but return on investment is lower
no_implicit_reexport = True

# This one can be tricky to get passing if you use a lot of untyped libraries
warn_return_any = True
# Shows errors for missing return statements on some execution paths.
warn_no_return = True
# Shows a warning when encountering any code inferred to be unreachable or redundant after performing type analysis.
warn_unreachable = True
# Disallows explicit Any in type positions such as type annotations and generic type parameters.
disallow_any_explicit = True

ignore_missing_imports = True